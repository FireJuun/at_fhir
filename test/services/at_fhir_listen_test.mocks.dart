// Mocks generated by Mockito 5.4.2 from annotations
// in at_fhir/test/services/at_fhir_listen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:io' as _i13;

import 'package:at_chops/at_chops.dart' as _i8;
import 'package:at_client/src/client/at_client_spec.dart' as _i7;
import 'package:at_client/src/client/request_options.dart' as _i11;
import 'package:at_client/src/preference/at_client_preference.dart' as _i9;
import 'package:at_client/src/response/response.dart' as _i4;
import 'package:at_client/src/service/notification_service.dart' as _i3;
import 'package:at_client/src/service/sync_service.dart' as _i2;
import 'package:at_client/src/stream/at_stream_response.dart' as _i6;
import 'package:at_client/src/stream/file_transfer_object.dart' as _i12;
import 'package:at_commons/at_commons.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSyncService_0 extends _i1.SmartFake implements _i2.SyncService {
  _FakeSyncService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationService_1 extends _i1.SmartFake
    implements _i3.NotificationService {
  _FakeNotificationService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAtResponse_2 extends _i1.SmartFake implements _i4.AtResponse {
  _FakeAtResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAtValue_3 extends _i1.SmartFake implements _i5.AtValue {
  _FakeAtValue_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAtStreamResponse_4 extends _i1.SmartFake
    implements _i6.AtStreamResponse {
  _FakeAtStreamResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AtClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockAtClient extends _i1.Mock implements _i7.AtClient {
  MockAtClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set telemetry(_i5.AtTelemetryService? telemetryService) => super.noSuchMethod(
        Invocation.setter(
          #telemetry,
          telemetryService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set atChops(_i8.AtChops? atChops) => super.noSuchMethod(
        Invocation.setter(
          #atChops,
          atChops,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set syncService(_i2.SyncService? syncService) => super.noSuchMethod(
        Invocation.setter(
          #syncService,
          syncService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.SyncService get syncService => (super.noSuchMethod(
        Invocation.getter(#syncService),
        returnValue: _FakeSyncService_0(
          this,
          Invocation.getter(#syncService),
        ),
      ) as _i2.SyncService);
  @override
  set notificationService(_i3.NotificationService? notificationService) =>
      super.noSuchMethod(
        Invocation.setter(
          #notificationService,
          notificationService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.NotificationService get notificationService => (super.noSuchMethod(
        Invocation.getter(#notificationService),
        returnValue: _FakeNotificationService_1(
          this,
          Invocation.getter(#notificationService),
        ),
      ) as _i3.NotificationService);
  @override
  void setPreferences(_i9.AtClientPreference? preference) => super.noSuchMethod(
        Invocation.method(
          #setPreferences,
          [preference],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<bool> put(
    _i5.AtKey? key,
    dynamic value, {
    bool? isDedicated = false,
    _i11.PutRequestOptions? putRequestOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            key,
            value,
          ],
          {
            #isDedicated: isDedicated,
            #putRequestOptions: putRequestOptions,
          },
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<_i4.AtResponse> putText(
    _i5.AtKey? atKey,
    String? value, {
    _i11.PutRequestOptions? putRequestOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putText,
          [
            atKey,
            value,
          ],
          {#putRequestOptions: putRequestOptions},
        ),
        returnValue: _i10.Future<_i4.AtResponse>.value(_FakeAtResponse_2(
          this,
          Invocation.method(
            #putText,
            [
              atKey,
              value,
            ],
            {#putRequestOptions: putRequestOptions},
          ),
        )),
      ) as _i10.Future<_i4.AtResponse>);
  @override
  _i10.Future<_i4.AtResponse> putBinary(
    _i5.AtKey? atKey,
    List<int>? value, {
    _i11.PutRequestOptions? putRequestOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putBinary,
          [
            atKey,
            value,
          ],
          {#putRequestOptions: putRequestOptions},
        ),
        returnValue: _i10.Future<_i4.AtResponse>.value(_FakeAtResponse_2(
          this,
          Invocation.method(
            #putBinary,
            [
              atKey,
              value,
            ],
            {#putRequestOptions: putRequestOptions},
          ),
        )),
      ) as _i10.Future<_i4.AtResponse>);
  @override
  _i10.Future<bool> putMeta(_i5.AtKey? key) => (super.noSuchMethod(
        Invocation.method(
          #putMeta,
          [key],
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<_i5.AtValue> get(
    _i5.AtKey? key, {
    bool? isDedicated = false,
    _i11.GetRequestOptions? getRequestOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
          {
            #isDedicated: isDedicated,
            #getRequestOptions: getRequestOptions,
          },
        ),
        returnValue: _i10.Future<_i5.AtValue>.value(_FakeAtValue_3(
          this,
          Invocation.method(
            #get,
            [key],
            {
              #isDedicated: isDedicated,
              #getRequestOptions: getRequestOptions,
            },
          ),
        )),
      ) as _i10.Future<_i5.AtValue>);
  @override
  _i10.Future<_i5.Metadata?> getMeta(_i5.AtKey? key) => (super.noSuchMethod(
        Invocation.method(
          #getMeta,
          [key],
        ),
        returnValue: _i10.Future<_i5.Metadata?>.value(),
      ) as _i10.Future<_i5.Metadata?>);
  @override
  _i10.Future<bool> delete(
    _i5.AtKey? key, {
    bool? isDedicated = false,
    _i11.DeleteRequestOptions? deleteRequestOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
          {
            #isDedicated: isDedicated,
            #deleteRequestOptions: deleteRequestOptions,
          },
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<List<_i5.AtKey>> getAtKeys({
    String? regex,
    String? sharedBy,
    String? sharedWith,
    bool? showHiddenKeys = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAtKeys,
          [],
          {
            #regex: regex,
            #sharedBy: sharedBy,
            #sharedWith: sharedWith,
            #showHiddenKeys: showHiddenKeys,
          },
        ),
        returnValue: _i10.Future<List<_i5.AtKey>>.value(<_i5.AtKey>[]),
      ) as _i10.Future<List<_i5.AtKey>>);
  @override
  _i10.Future<List<String>> getKeys({
    String? regex,
    String? sharedBy,
    String? sharedWith,
    bool? showHiddenKeys = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
          {
            #regex: regex,
            #sharedBy: sharedBy,
            #sharedWith: sharedWith,
            #showHiddenKeys: showHiddenKeys,
          },
        ),
        returnValue: _i10.Future<List<String>>.value(<String>[]),
      ) as _i10.Future<List<String>>);
  @override
  _i10.Future<bool> notify(
    _i5.AtKey? key,
    String? value,
    _i5.OperationEnum? operation, {
    _i5.MessageTypeEnum? messageType,
    _i5.PriorityEnum? priority,
    _i5.StrategyEnum? strategy,
    int? latestN,
    String? notifier,
    bool? isDedicated = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #notify,
          [
            key,
            value,
            operation,
          ],
          {
            #messageType: messageType,
            #priority: priority,
            #strategy: strategy,
            #latestN: latestN,
            #notifier: notifier,
            #isDedicated: isDedicated,
          },
        ),
        returnValue: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<String?> notifyChange(
          _i3.NotificationParams? notificationParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyChange,
          [notificationParams],
        ),
        returnValue: _i10.Future<String?>.value(),
      ) as _i10.Future<String?>);
  @override
  _i10.Future<String> notifyAll(
    _i5.AtKey? atKey,
    String? value,
    _i5.OperationEnum? operation,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyAll,
          [
            atKey,
            value,
            operation,
          ],
        ),
        returnValue: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
  @override
  _i10.Future<String> notifyStatus(String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyStatus,
          [notificationId],
        ),
        returnValue: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
  @override
  _i10.Future<String> notifyList({
    String? fromDate,
    String? toDate,
    String? regex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #notifyList,
          [],
          {
            #fromDate: fromDate,
            #toDate: toDate,
            #regex: regex,
          },
        ),
        returnValue: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
  @override
  _i10.Future<void> startMonitor(
    String? privateKey,
    Function? acceptStream, {
    String? regex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startMonitor,
          [
            privateKey,
            acceptStream,
          ],
          {#regex: regex},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i6.AtStreamResponse> stream(
    String? sharedWith,
    String? filePath, {
    String? namespace,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #stream,
          [
            sharedWith,
            filePath,
          ],
          {#namespace: namespace},
        ),
        returnValue:
            _i10.Future<_i6.AtStreamResponse>.value(_FakeAtStreamResponse_4(
          this,
          Invocation.method(
            #stream,
            [
              sharedWith,
              filePath,
            ],
            {#namespace: namespace},
          ),
        )),
      ) as _i10.Future<_i6.AtStreamResponse>);
  @override
  _i10.Future<void> sendStreamAck(
    String? streamId,
    String? fileName,
    int? fileLength,
    String? senderAtSign,
    Function? streamCompletionCallBack,
    Function? streamReceiveCallBack,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendStreamAck,
          [
            streamId,
            fileName,
            fileLength,
            senderAtSign,
            streamCompletionCallBack,
            streamReceiveCallBack,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<Map<String, _i12.FileTransferObject>> uploadFile(
    List<_i13.File>? files,
    List<String>? sharedWithAtSigns,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [
            files,
            sharedWithAtSigns,
          ],
        ),
        returnValue: _i10.Future<Map<String, _i12.FileTransferObject>>.value(
            <String, _i12.FileTransferObject>{}),
      ) as _i10.Future<Map<String, _i12.FileTransferObject>>);
  @override
  _i10.Future<List<_i13.File>> downloadFile(
    String? transferId,
    String? sharedByAtSign, {
    String? downloadPath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadFile,
          [
            transferId,
            sharedByAtSign,
          ],
          {#downloadPath: downloadPath},
        ),
        returnValue: _i10.Future<List<_i13.File>>.value(<_i13.File>[]),
      ) as _i10.Future<List<_i13.File>>);
  @override
  _i10.Future<List<_i12.FileStatus>> reuploadFiles(
    List<_i13.File>? files,
    _i12.FileTransferObject? fileTransferObject,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #reuploadFiles,
          [
            files,
            fileTransferObject,
          ],
        ),
        returnValue:
            _i10.Future<List<_i12.FileStatus>>.value(<_i12.FileStatus>[]),
      ) as _i10.Future<List<_i12.FileStatus>>);
  @override
  _i10.Future<Map<String, _i12.FileTransferObject>> shareFiles(
    List<String>? sharedWithAtSigns,
    String? key,
    String? fileUrl,
    String? encryptionKey,
    List<_i12.FileStatus>? fileStatus, {
    DateTime? date,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #shareFiles,
          [
            sharedWithAtSigns,
            key,
            fileUrl,
            encryptionKey,
            fileStatus,
          ],
          {#date: date},
        ),
        returnValue: _i10.Future<Map<String, _i12.FileTransferObject>>.value(
            <String, _i12.FileTransferObject>{}),
      ) as _i10.Future<Map<String, _i12.FileTransferObject>>);
}
